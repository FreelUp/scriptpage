version: "3.7"

services:
    # image project
    app:
        container_name: app
        build:
            args:
                user: tulio
                uid: 1000
            context: ./docker
            dockerfile: Dockerfile
        image: laravel-app
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on: 
            - redis
        networks: 
            - app_network
    
    # nginx
    nginx:
        container_name: nginx
        image: nginx:alpine
        restart: unless-stopped
        ports: 
            - "80:80"
        volumes: 
            - ./:/var/www
            - ./docker/nginx/:/etc/nginx/conf.d/
        networks: 
            - app_network

    # image project
    nodejs:
        container_name: nodejs
        build:
            args:
                user: tulio
                uid: 1000
            context: ./docker/node
            dockerfile: Dockerfile
        image: nodejs
        tty: true
        restart: unless-stopped
        working_dir: /var/www/
        volumes:
            - ./:/var/www
        depends_on: 
            - app
        networks: 
            - app_network

    # npm
    # npm:  
    #     container_name: npm
    #     image: node:14
    #     tty: true
    #     working_dir: /var/www
    #     entrypoint: ["npm","start"]
    #     volumes: 
    #         - ./:/var/www
    #     networks: 
    #         - app_network

    # MariaDB
    db:
        container_name: db
        image: mariadb:10.7.4-focal
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: "%"
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 1
        volumes: 
            - ./.docker/mysql/dbdata:/var/lib/mysql
        networks: 
            - app_network

    # queue
    queue:
        container_name: queue
        image: laravel-app
        restart: unless-stopped
        command: "php artisan queue:work"
        volumes: 
            - ./:/var/www
        depends_on: 
            - redis
            - app
        networks: 
            - app_network

    # redis
    redis:
        container_name: redis
        image: redis:latest
        networks: 
            - app_network

networks: 
    app_network:
        driver: bridge
